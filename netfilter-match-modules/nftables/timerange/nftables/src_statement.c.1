
static void timerange_stmt_print(const struct stmt *stmt, struct output_ctx *octx)
{
	bool inv = stmt->timerange.flags & NFT_TIMERANGE_F_INV;

	nft_print(octx, "timerange%%s", inv ? " != " : "");
	if(stmt->timerange.hours != NULL && strlen(stmt->timerange.hours) > 0)
		nft_print(octx, " hours \"%%s\"", stmt->timerange.hours);
	if(stmt->timerange.weekdays != NULL && strlen(stmt->timerange.weekdays) > 0)
		nft_print(octx, " weekdays \"%%s\"", stmt->timerange.weekdays);
	if(stmt->timerange.weeklyranges != NULL && strlen(stmt->timerange.weeklyranges) > 0)
		nft_print(octx, " weeklyranges \"%%s\"", stmt->timerange.weeklyranges);
}

static void timerange_stmt_destroy(struct stmt *stmt)
{
	free_const(stmt->timerange.hours);
	free_const(stmt->timerange.weekdays);
	free_const(stmt->timerange.weeklyranges);
}

static const struct stmt_ops timerange_stmt_ops = {
	.type		= STMT_TIMERANGE,
	.name		= "timerange",
	.print		= timerange_stmt_print,
	.destroy	= timerange_stmt_destroy,
};

struct stmt *timerange_stmt_alloc(const struct location *loc)
{
	return stmt_alloc(loc, &timerange_stmt_ops);
}