--- /dev/null
+++ b/package/kernel/mac80211/patches/subsys/969-allow-sta-bridge.patch
@@ -0,0 +1,47 @@
+--- a/net/wireless/core.c
++++ b/net/wireless/core.c
+@@ -1270,8 +1270,7 @@ void cfg80211_init_wdev(struct wireless_
+ 	/* allow mac80211 to determine the timeout */
+ 	wdev->ps_timeout = -1;
+ 
+-	if ((wdev->iftype == NL80211_IFTYPE_STATION ||
+-	     wdev->iftype == NL80211_IFTYPE_P2P_CLIENT ||
++	if ((wdev->iftype == NL80211_IFTYPE_P2P_CLIENT ||
+ 	     wdev->iftype == NL80211_IFTYPE_ADHOC) && !wdev->use_4addr)
+ 		wdev->netdev->priv_flags |= IFF_DONT_BRIDGE;
+ 
+--- a/net/wireless/nl80211.c
++++ b/net/wireless/nl80211.c
+@@ -3753,8 +3753,6 @@ static int nl80211_valid_4addr(struct cf
+ 			       enum nl80211_iftype iftype)
+ {
+ 	if (!use_4addr) {
+-		if (netdev && netif_is_bridge_port(netdev))
+-			return -EBUSY;
+ 		return 0;
+ 	}
+ 
+--- a/net/wireless/util.c
++++ b/net/wireless/util.c
+@@ -1037,7 +1035,6 @@ int cfg80211_change_iface(struct cfg8021
+ 		/* if it's part of a bridge, reject changing type to station/ibss */
+ 		if (netif_is_bridge_port(dev) &&
+ 		    (ntype == NL80211_IFTYPE_ADHOC ||
+-		     ntype == NL80211_IFTYPE_STATION ||
+ 		     ntype == NL80211_IFTYPE_P2P_CLIENT))
+ 			return -EBUSY;
+ 
+@@ -1082,10 +1081,9 @@ int cfg80211_change_iface(struct cfg8021
+ 		dev->priv_flags &= ~IFF_DONT_BRIDGE;
+ 		switch (ntype) {
+ 		case NL80211_IFTYPE_STATION:
+-			if (dev->ieee80211_ptr->use_4addr)
+-				break;
+-			fallthrough;
+ 		case NL80211_IFTYPE_OCB:
++		    /* we bridge STA now OK? */
++		    break;
+ 		case NL80211_IFTYPE_P2P_CLIENT:
+ 		case NL80211_IFTYPE_ADHOC:
+ 			dev->priv_flags |= IFF_DONT_BRIDGE;
+
--- a/package/network/config/wifi-scripts/files/lib/netifd/hostapd.sh
+++ b/package/network/config/wifi-scripts/files/lib/netifd/hostapd.sh
@@ -1289,9 +1289,6 @@ wpa_supplicant_prepare_interface() {
 			adhoc)
 				fail=1
 			;;
-			sta)
-				[ "$wds" = 1 -o "$multi_ap" = 1 ] || fail=1
-			;;
 		esac
 
 		[ -n "$fail" ] && {
