#!/bin/sh /etc/rc.common
START=85

include /lib/network

backup_script="/tmp/do_webmon_backup.sh"
tmp_cron="/tmp/tmp.cron"

update_cron()
{
	old_md5=$(md5sum /etc/crontabs/root)
	old_md5=${old_md5% *}
	new_md5=$(md5sum "$tmp_cron")
	new_md5=${new_md5% *}
	if [ "$old_md5" = "$new_md5" ] ; then
		rm "$tmp_cron"
	else
		mv "$tmp_cron" /etc/crontabs/root
		cron_active=$(ps | grep "crond" | grep -v "grep" )
		if [ -n "$cron_active" ] ; then
			/etc/init.d/cron restart
		fi
	fi
}

start()
{
	. /lib/functions/network.sh
	
	config_load webmon_gargoyle
	config_get max_domains webmon max_domains
	config_get max_searches webmon max_searches
	config_get domain_save_path webmon domain_save_path
	config_get search_save_path webmon search_save_path
	config_get exclude_ips webmon exclude_ips
	config_get include_ips webmon include_ips
	config_get exclude_ip6s webmon exclude_ip6s
	config_get include_ip6s webmon include_ip6s

	config_get_bool enabled webmon 'enabled' '0'
	[ "$enabled" -gt 0 ] || return

	network_get_device wan_if wan || \
		wan_if=$(uci -q get network.wan.device)
	if [ -n "$wan_if" ] ; then
		#load save path, creating directory if necessary
		if [ -z "$domain_save_path" ] ; then
			domain_save_path=/usr/data/webmon_domains.txt
		fi
		if [ ! -e "$domain_save_path" ] ; then
			domain_save_dir=$(echo "$domain_save_path" | sed 's/[^\/]*$//g' )
			if [ ! -e "$domain_save_dir" ] ; then
				mkdir -p "$domain_save_dir"
			fi
		fi
		if [ -z "$search_save_path" ] ; then
			search_save_path=/usr/data/webmon_searches.txt
		fi
		if [ ! -e "$search_save_path" ] ; then
			search_save_dir=$(echo "$search_save_path" | sed 's/[^\/]*$//g' )
			if [ ! -e "$search_save_dir" ] ; then
				mkdir -p "$search_save_dir"
			fi
		fi
	
		#remove existing rules
		delete_chain_from_table inet fw4 web_monitor
		nft add chain inet fw4 web_monitor
		nft insert rule inet fw4 forward oifname "$wan_if" jump web_monitor

		#load parameters and insert rule
		webmon_params=""
		exclude=""
		include=""
		if [ -n "$max_domains" ] ; then
			webmon_params="$webmon_params max-domains $max_domains"
		fi
		if [ -n "$max_searches" ] ; then
			webmon_params="$webmon_params max-searches $max_searches"
		fi
		if [ -n "$exclude_ips" ] ; then
			exclude="$exclude_ips"
			#webmon_params="$webmon_params exclude-ips \"$exclude_ips\""
		fi
		if [ -n "$exclude_ip6s" ] ; then
			[ -n "$exclude" ] && exclude="$exclude,"
			exclude="$exclude$exclude_ip6s"
			#webmon6_params="$webmo6n_params --exclude_ips $exclude_ip6s"
		fi
		if [ -n "$include_ips" ] && [ -z "$exclude" ] ; then
			include="$include_ips"
			#webmon_params="$webmon_params include-ips \"$include_ips\""
		fi
		if [ -n "$include_ip6s" ] && [ -z "$exclude" ] ; then
			[ -n "$include" ] && include="$include,"
			include="$include$include_ip6s"
			#webmon6_params="$webmon6_params --include_ips $include_ip6s"
		fi
		
		[ -n "$exclude" ] && webmon_params="$webmon_params exclude-ips \"$exclude\""
		[ -n "$include" ] && webmon_params="$webmon_params include-ips \"$include\""
		
		if   [ -e "$search_save_path" ] && [ -e "$domain_save_path" ] ; then
			nft insert rule inet fw4 web_monitor webmon $webmon_params search-load-file \""$search_save_path"\" domain-load-file \""$domain_save_path"\"
		elif [ -e "$search_save_path" ] ; then
			nft insert rule inet fw4 web_monitor webmon $webmon_params search-load-file \""$search_save_path"\" clear-domain
		elif [ -e "$domain_save_path" ] ; then
			nft insert rule inet fw4 web_monitor webmon $webmon_params domain-load-file \""$domain_save_path"\" clear-search
		else
			nft insert rule inet fw4 web_monitor webmon $webmon_params clear-domain clear-search
		fi
		

		#create backup script in tmp (RAM disk) so I/O to flash isn't an issue
		echo '#!/bin/sh'          > "$backup_script"
		echo "touch /etc/banner" >> "$backup_script"
		echo "cp /proc/webmon_recent_domains  '$domain_save_path'" >> "$backup_script"
		echo "cp /proc/webmon_recent_searches '$search_save_path'" >> "$backup_script"
		chmod +x "$backup_script"

		#setup cron job
		touch /etc/crontabs/root
		cat /etc/crontabs/root | grep -v "$backup_script" > "$tmp_cron"
		echo "0 0,4,8,12,16,20 * * * $backup_script" >> "$tmp_cron"
		update_cron

	fi
}

stop()
{
	#backup current data and then stop backup cron job
	sh "$backup_script"
	touch /etc/crontabs/root
	cat /etc/crontabs/root | grep -v "$backup_script" > "$tmp_cron"
	update_cron

	#clear module data, and remove web_monitor chain
	nft flush chain inet fw4 web_monitor
	nft add rule inet fw4 web_monitor return
	nft add rule inet fw4 web_monitor webmon clear-domain clear-search
	delete_chain_from_table inet fw4 web_monitor
}

restart()
{
	webmon_rules=$(( $(nft list chain inet fw4 web_monitor 2>/dev/null | wc -l)-4 ))
	if [ $webmon_rules -gt 0 ] ; then
		stop
	fi
	start
}
